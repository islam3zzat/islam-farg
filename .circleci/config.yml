version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/awsome-blog # directory where steps will run
    docker: # run the steps with Docker
      - image: circleci/node:10 # ...with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-dependencies
          command: yarn
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run: # run tests
          name: test
          command: npm test
  deploy:
    docker: # run the steps with Docker
      - image: circleci/node:10 # ...with this image as the primary container; this is where all `steps` will run
    steps:
      - run:
          name: deploy-now
          command: |
            sudo npm install -g now
            URL=$(now -t ${NOW_TOKEN})
            now -t ${NOW_TOKEN} alias ${URL} https://islam-farg.ml/
  branch_deploy:
    docker: # run the steps with Docker
      - image: circleci/node:10 # ...with this image as the primary container; this is where all `steps` will run
    steps:
      - run:
          name: deploy-now
          command: |
            sudo npm install -g now
            URL=$(now -t ${NOW_TOKEN})
            now -t ${NOW_TOKEN} alias ${URL}  https://${CIRCLE_BRANCH}.islam-farg.ml/
            echo __${URL}__
            echo https://${CIRCLE_BRANCH}.islam-farg.ml/

workflows:
  version: 2
  test_build_and_deploy:
    jobs:
      - build
      - can_deploy:
          type: approval
          filters:
            branches:
              only:
                - master
          requires:
            - build
  test_build_and_deploy_branch:
    jobs:
      - build
      - can_deploy_branch:
          type: approval
          filters:
            branches:
              ignore:
                - master
          requires:
            - build
      - branch_deploy:
          requires:
            - can_deploy_branch
